name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  APP_NAME: ${{ vars.APP_NAME || secrets.APP_NAME }}
  APP_VERSION: "1.0.0"
  S3_BUCKET: "elasticbeanstalk-eu-central-1-204529129805"
  AWS_REGION: ${{ vars.AWS_DEFAULT_REGION || secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_PLATFORM: Docker
  ENV_NAME: ${{ vars.ENV_NAME || secrets.ENV_NAME }}
  SSH_KEY: ${{ secrets.SSH_KEY }}

jobs:
  create_app_version:
    runs-on: ubuntu-latest
    container: python:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install AWS CLI
        run: pip install awscli
        
      - name: Create and upload version
        run: |
          echo "Creating a new zip file"
          python zip.py $APP_NAME
          echo "Creating a new AWS Version Label"
          AWS_VERSION_LABEL=$APP_NAME-$APP_VERSION-$GITHUB_RUN_ID
          S3_KEY="$AWS_VERSION_LABEL.zip"
          echo "Uploading version to bucket"
          aws s3 cp $APP_NAME.zip s3://$S3_BUCKET/$S3_KEY --region $AWS_REGION
          echo "Creating new app version"
          aws elasticbeanstalk create-application-version \
              --application-name $APP_NAME \
              --version-label $AWS_VERSION_LABEL \
              --region $AWS_REGION \
              --source-bundle S3Bucket=$S3_BUCKET,S3Key=$S3_KEY \
              --description "$GITHUB_SHA" \
              --auto-create-application

  deploy_app_version:
    needs: create_app_version
    runs-on: ubuntu-latest
    container: coxauto/aws-ebcli
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy app
        run: |
          AWS_VERSION_LABEL=$APP_NAME-$APP_VERSION-$GITHUB_RUN_ID
          echo "Deploying app"
          eb init -i $APP_NAME -p $AWS_PLATFORM -k $SSH_KEY --region $AWS_REGION
          eb deploy $ENV_NAME --version $AWS_VERSION_LABEL
